# coding: utf-8

"""


    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from ...base_model import BaseModel
from pprint import pformat
from six import iteritems
import re


class QuizStatisticsAnswerStatistics(BaseModel):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, text=None, weight=None, responses=None):
        """
        QuizStatisticsAnswerStatistics - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'text': 'str',
            'weight': 'int',
            'responses': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'text': 'text',
            'weight': 'weight',
            'responses': 'responses'
        }

        self._id = id
        self._text = text
        self._weight = weight
        self._responses = responses

    @property
    def id(self):
        """
        Gets the id of this QuizStatisticsAnswerStatistics.
        ID of the answer.

        :return: The id of this QuizStatisticsAnswerStatistics.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this QuizStatisticsAnswerStatistics.
        ID of the answer.

        :param id: The id of this QuizStatisticsAnswerStatistics.
        :type: int
        """

        self._id = id

    @property
    def text(self):
        """
        Gets the text of this QuizStatisticsAnswerStatistics.
        The text attached to the answer.

        :return: The text of this QuizStatisticsAnswerStatistics.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """
        Sets the text of this QuizStatisticsAnswerStatistics.
        The text attached to the answer.

        :param text: The text of this QuizStatisticsAnswerStatistics.
        :type: str
        """

        self._text = text

    @property
    def weight(self):
        """
        Gets the weight of this QuizStatisticsAnswerStatistics.
        An integer to determine correctness of the answer. Incorrect answers should be 0, correct answers should be non-negative.

        :return: The weight of this QuizStatisticsAnswerStatistics.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """
        Sets the weight of this QuizStatisticsAnswerStatistics.
        An integer to determine correctness of the answer. Incorrect answers should be 0, correct answers should be non-negative.

        :param weight: The weight of this QuizStatisticsAnswerStatistics.
        :type: int
        """

        self._weight = weight

    @property
    def responses(self):
        """
        Gets the responses of this QuizStatisticsAnswerStatistics.
        Number of students who have chosen this answer.

        :return: The responses of this QuizStatisticsAnswerStatistics.
        :rtype: int
        """
        return self._responses

    @responses.setter
    def responses(self, responses):
        """
        Sets the responses of this QuizStatisticsAnswerStatistics.
        Number of students who have chosen this answer.

        :param responses: The responses of this QuizStatisticsAnswerStatistics.
        :type: int
        """

        self._responses = responses

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
