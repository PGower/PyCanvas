{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "https://canvas.instructure.com/api",
  "resourcePath": "/sis_imports",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/accounts/{account_id}/sis_imports",
      "description": "Returns the list of SIS imports for an account\n\nExample:\n  curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports' \\\n    -H \"Authorization: Bearer <token>\"",
      "operations": [
        {
          "method": "GET",
          "summary": "Get SIS import list",
          "notes": "Returns the list of SIS imports for an account\n\nExample:\n  curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports' \\\n    -H \"Authorization: Bearer <token>\"",
          "nickname": "get_sis_import_list",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "query",
              "name": "created_since",
              "description": "If set, only shows imports created after the specified date (use ISO8601 format)",
              "type": "datetime",
              "format": null,
              "required": false
            }
          ],
          "type": "array",
          "items": {
            "$ref": "SisImport"
          }
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports",
      "description": "Import SIS data into Canvas. Must be on a root account with SIS imports\nenabled.\n\nFor more information on the format that's expected here, please see the\n\"SIS CSV\" section in the API docs.",
      "operations": [
        {
          "method": "POST",
          "summary": "Import SIS data",
          "notes": "Import SIS data into Canvas. Must be on a root account with SIS imports\nenabled.\n\nFor more information on the format that's expected here, please see the\n\"SIS CSV\" section in the API docs.",
          "nickname": "import_sis_data",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "import_type",
              "description": "Choose the data format for reading SIS data. With a standard Canvas install, this option can only be 'instructure_csv', and if unprovided, will be assumed to be so. Can be part of the query string.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "attachment",
              "description": "There are two ways to post SIS import data - either via a multipart/form-data form-field-style attachment, or via a non-multipart raw post request. 'attachment' is required for multipart/form-data style posts. Assumed to be SIS data from a file upload form field named 'attachment'. Examples: curl -F attachment=@<filename> -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv' If you decide to do a raw post, you can skip the 'attachment' argument, but you will then be required to provide a suitable Content-Type header. You are encouraged to also provide the 'extension' argument. Examples: curl -H 'Content-Type: application/octet-stream' --data-binary @<filename>.zip \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&extension=zip' curl -H 'Content-Type: application/zip' --data-binary @<filename>.zip \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv' curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv' curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \\ -H \"Authorization: Bearer <token>\" \\ 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&batch_mode=1&batch_mode_term_id=15'",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "extension",
              "description": "Recommended for raw post request style imports. This field will be used to distinguish between zip, xml, csv, and other file format extensions that would usually be provided with the filename in the multipart post request scenario. If not provided, this value will be inferred from the Content-Type, falling back to zip-file format if all else fails.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "batch_mode",
              "description": "If set, this SIS import will be run in batch mode, deleting any data previously imported via SIS that is not present in this latest import. See the SIS CSV Format page for details.",
              "type": "boolean",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "batch_mode_term_id",
              "description": "Limit deletions to only this term. Required if batch mode is enabled.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "override_sis_stickiness",
              "description": "Many fields on records in Canvas can be marked \"sticky,\" which means that when something changes in the UI apart from the SIS, that field gets \"stuck.\" In this way, by default, SIS imports do not override UI changes. If this field is present, however, it will tell the SIS import to ignore \"stickiness\" and override all fields.",
              "type": "boolean",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "add_sis_stickiness",
              "description": "This option, if present, will process all changes as if they were UI changes. This means that \"stickiness\" will be added to changed fields. This option is only processed if 'override_sis_stickiness' is also provided.",
              "type": "boolean",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "clear_sis_stickiness",
              "description": "This option, if present, will clear \"stickiness\" from all fields touched by this import. Requires that 'override_sis_stickiness' is also provided. If 'add_sis_stickiness' is also provided, 'clear_sis_stickiness' will overrule the behavior of 'add_sis_stickiness'",
              "type": "boolean",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "diffing_data_set_identifier",
              "description": "If set on a CSV import, Canvas will attempt to optimize the SIS import by comparing this set of CSVs to the previous set that has the same data set identifier, and only appliying the difference between the two. See the SIS CSV Format documentation for more details.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "diffing_remaster_data_set",
              "description": "If true, and diffing_data_set_identifier is sent, this SIS import will be part of the data set, but diffing will not be performed. See the SIS CSV Format documentation for details.",
              "type": "boolean",
              "format": null,
              "required": false
            }
          ],
          "type": "SisImport"
        }
      ]
    },
    {
      "path": "/v1/accounts/{account_id}/sis_imports/{id}",
      "description": "Get the status of an already created SIS import.\n\n  Examples:\n    curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports/<sis_import_id>' \\\n        -H \"Authorization: Bearer <token>\"",
      "operations": [
        {
          "method": "GET",
          "summary": "Get SIS import status",
          "notes": "Get the status of an already created SIS import.\n\n  Examples:\n    curl 'https://<canvas>/api/v1/accounts/<account_id>/sis_imports/<sis_import_id>' \\\n        -H \"Authorization: Bearer <token>\"",
          "nickname": "get_sis_import_status",
          "parameters": [
            {
              "paramType": "path",
              "name": "account_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            }
          ],
          "type": "SisImport"
        }
      ]
    }
  ],
  "models": {
    "SisImportData": {
      "id": "SisImportData",
      "description": "",
      "required": [

      ],
      "properties": {
        "import_type": {
          "description": "The type of SIS import",
          "example": "instructure_csv",
          "type": "string"
        },
        "supplied_batches": {
          "description": "Which file were included in the SIS import",
          "example": "[\"term\", \"course\", \"section\", \"user\", \"enrollment\"]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "counts": {
          "description": "The number of rows processed for each type of import",
          "$ref": "SisImportCounts"
        }
      }
    },
    "SisImportCounts": {
      "id": "SisImportCounts",
      "description": "",
      "required": [

      ],
      "properties": {
        "accounts": {
          "example": 0,
          "type": "integer"
        },
        "terms": {
          "example": 3,
          "type": "integer"
        },
        "abstract_courses": {
          "example": 0,
          "type": "integer"
        },
        "courses": {
          "example": 121,
          "type": "integer"
        },
        "sections": {
          "example": 278,
          "type": "integer"
        },
        "xlists": {
          "example": 0,
          "type": "integer"
        },
        "users": {
          "example": 346,
          "type": "integer"
        },
        "enrollments": {
          "example": 1542,
          "type": "integer"
        },
        "groups": {
          "example": 0,
          "type": "integer"
        },
        "group_memberships": {
          "example": 0,
          "type": "integer"
        },
        "grade_publishing_results": {
          "example": 0,
          "type": "integer"
        }
      }
    },
    "SisImport": {
      "id": "SisImport",
      "description": "",
      "required": [

      ],
      "properties": {
        "id": {
          "description": "The unique identifier for the SIS import.",
          "example": 1,
          "type": "integer"
        },
        "created_at": {
          "description": "The date the SIS import was created.",
          "example": "2013-12-01T23:59:00-06:00",
          "type": "datetime"
        },
        "ended_at": {
          "description": "The date the SIS import finished. Returns null if not finished.",
          "example": "2013-12-02T00:03:21-06:00",
          "type": "datetime"
        },
        "updated_at": {
          "description": "The date the SIS import was last updated.",
          "example": "2013-12-02T00:03:21-06:00",
          "type": "datetime"
        },
        "workflow_state": {
          "description": "The current state of the SIS import. - 'created': The SIS import has been created.\n - 'importing': The SIS import is currently processing.\n - 'imported': The SIS import has completed successfully.\n - 'imported_with_messages': The SIS import completed with errors or warnings.\n - 'failed_with_messages': The SIS import failed with errors.\n - 'failed': The SIS import failed.",
          "example": "imported",
          "type": "string",
          "allowableValues": {
            "values": [
              "created",
              "imported",
              "imported_with_messages",
              "failed_with_messages",
              "failed"
            ]
          }
        },
        "data": {
          "description": "data",
          "$ref": "SisImportData"
        },
        "progress": {
          "description": "The progress of the SIS import.",
          "example": "100",
          "type": "string"
        },
        "processing_warnings": {
          "description": "Only imports that are complete will get this data. An array of CSV_file/warning_message pairs.",
          "example": "[['students.csv','user John Doe has already claimed john_doe's requested login information, skipping'], ...]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "processing_errors": {
          "description": "An array of CSV_file/error_message pairs.",
          "example": "[['students.csv','Error while importing CSV. Please contact support.'], ...]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "batch_mode": {
          "description": "Whether the import was run in batch mode.",
          "example": "true",
          "type": "boolean"
        },
        "batch_mode_term_id": {
          "description": "The term the batch was limited to.",
          "example": "1234",
          "type": "string"
        },
        "override_sis_stickiness": {
          "description": "Whether UI changes were overridden.",
          "example": "false",
          "type": "boolean"
        },
        "add_sis_stickiness": {
          "description": "Whether stickiness was added to the batch changes.",
          "example": "false",
          "type": "boolean"
        },
        "clear_sis_stickiness": {
          "description": "Whether stickiness was cleared.",
          "example": "false",
          "type": "boolean"
        },
        "diffing_data_set_identifier": {
          "description": "The identifier of the data set that this SIS batch diffs against",
          "example": "account-5-enrollments",
          "type": "string"
        },
        "diffed_against_import_id": {
          "description": "The ID of the SIS Import that this import was diffed against",
          "example": 1,
          "type": "integer"
        }
      }
    }
  }
}
