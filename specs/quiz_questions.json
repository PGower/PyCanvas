{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "https://canvas.instructure.com/api",
  "resourcePath": "/quiz_questions",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/courses/{course_id}/quizzes/{quiz_id}/questions",
      "description": "Returns the list of QuizQuestions in this quiz.",
      "operations": [
        {
          "method": "GET",
          "summary": "List questions in a quiz or a submission",
          "notes": "Returns the list of QuizQuestions in this quiz.",
          "nickname": "list_questions_in_quiz_or_submission",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "quiz_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "query",
              "name": "quiz_submission_id",
              "description": "If specified, the endpoint will return the questions that were presented for that submission. This is useful if the quiz has been modified after the submission was created and the latest quiz version's set of questions does not match the submission's. NOTE: you must specify quiz_submission_attempt as well if you specify this parameter.",
              "type": "integer",
              "format": "int64",
              "required": false
            },
            {
              "paramType": "query",
              "name": "quiz_submission_attempt",
              "description": "The attempt of the submission you want the questions for.",
              "type": "integer",
              "format": "int64",
              "required": false
            }
          ],
          "type": "array",
          "items": {
            "$ref": "QuizQuestion"
          }
        }
      ]
    },
    {
      "path": "/v1/courses/{course_id}/quizzes/{quiz_id}/questions/{id}",
      "description": "Returns the quiz question with the given id",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a single quiz question",
          "notes": "Returns the quiz question with the given id",
          "nickname": "get_single_quiz_question",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "quiz_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "The quiz question unique identifier.",
              "type": "integer",
              "format": "int64",
              "required": true
            }
          ],
          "type": "QuizQuestion"
        }
      ]
    },
    {
      "path": "/v1/courses/{course_id}/quizzes/{quiz_id}/questions",
      "description": "Create a new quiz question for this quiz",
      "operations": [
        {
          "method": "POST",
          "summary": "Create a single quiz question",
          "notes": "Create a new quiz question for this quiz",
          "nickname": "create_single_quiz_question",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "quiz_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "form",
              "name": "question[question_name]",
              "description": "The name of the question.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[question_text]",
              "description": "The text of the question.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[quiz_group_id]",
              "description": "The id of the quiz group to assign the question to.",
              "type": "integer",
              "format": "int64",
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[question_type]",
              "description": "The type of question. Multiple optional fields depend upon the type of question to be used.",
              "type": "string",
              "format": null,
              "required": false,
              "enum": [
                "calculated_question",
                "essay_question",
                "file_upload_question",
                "fill_in_multiple_blanks_question",
                "matching_question",
                "multiple_answers_question",
                "multiple_choice_question",
                "multiple_dropdowns_question",
                "numerical_question",
                "short_answer_question",
                "text_only_question"
              ]
            },
            {
              "paramType": "form",
              "name": "question[position]",
              "description": "The order in which the question will be displayed in the quiz in relation to other questions.",
              "type": "integer",
              "format": "int64",
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[points_possible]",
              "description": "The maximum amount of points received for answering this question correctly.",
              "type": "integer",
              "format": "int64",
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[correct_comments]",
              "description": "The comment to display if the student answers the question correctly.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[incorrect_comments]",
              "description": "The comment to display if the student answers incorrectly.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[neutral_comments]",
              "description": "The comment to display regardless of how the student answered.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[text_after_answers]",
              "description": "no description",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[answers]",
              "description": "no description",
              "type": "[answer]",
              "format": null,
              "required": false
            }
          ],
          "type": "QuizQuestion"
        }
      ]
    },
    {
      "path": "/v1/courses/{course_id}/quizzes/{quiz_id}/questions/{id}",
      "description": "Updates an existing quiz question for this quiz",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update an existing quiz question",
          "notes": "Updates an existing quiz question for this quiz",
          "nickname": "update_existing_quiz_question",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "quiz_id",
              "description": "The associated quiz's unique identifier.",
              "type": "integer",
              "format": "int64",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "The quiz question's unique identifier.",
              "type": "integer",
              "format": "int64",
              "required": true
            },
            {
              "paramType": "form",
              "name": "question[question_name]",
              "description": "The name of the question.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[question_text]",
              "description": "The text of the question.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[quiz_group_id]",
              "description": "The id of the quiz group to assign the question to.",
              "type": "integer",
              "format": "int64",
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[question_type]",
              "description": "The type of question. Multiple optional fields depend upon the type of question to be used.",
              "type": "string",
              "format": null,
              "required": false,
              "enum": [
                "calculated_question",
                "essay_question",
                "file_upload_question",
                "fill_in_multiple_blanks_question",
                "matching_question",
                "multiple_answers_question",
                "multiple_choice_question",
                "multiple_dropdowns_question",
                "numerical_question",
                "short_answer_question",
                "text_only_question"
              ]
            },
            {
              "paramType": "form",
              "name": "question[position]",
              "description": "The order in which the question will be displayed in the quiz in relation to other questions.",
              "type": "integer",
              "format": "int64",
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[points_possible]",
              "description": "The maximum amount of points received for answering this question correctly.",
              "type": "integer",
              "format": "int64",
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[correct_comments]",
              "description": "The comment to display if the student answers the question correctly.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[incorrect_comments]",
              "description": "The comment to display if the student answers incorrectly.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[neutral_comments]",
              "description": "The comment to display regardless of how the student answered.",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[text_after_answers]",
              "description": "no description",
              "type": "string",
              "format": null,
              "required": false
            },
            {
              "paramType": "form",
              "name": "question[answers]",
              "description": "no description",
              "type": "[answer]",
              "format": null,
              "required": false
            }
          ],
          "type": "QuizQuestion"
        }
      ]
    },
    {
      "path": "/v1/courses/{course_id}/quizzes/{quiz_id}/questions/{id}",
      "description": "<b>204 No Content</b> response code is returned if the deletion was successful.",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete a quiz question",
          "notes": "<b>204 No Content</b> response code is returned if the deletion was successful.",
          "nickname": "delete_quiz_question",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "path",
              "name": "quiz_id",
              "description": "The associated quiz's unique identifier",
              "type": "integer",
              "format": "int64",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "description": "The quiz question's unique identifier",
              "type": "integer",
              "format": "int64",
              "required": true
            }
          ],
          "type": "void"
        }
      ]
    }
  ],
  "models": {
    "QuizQuestion": {
      "id": "QuizQuestion",
      "description": "",
      "required": [
        "id",
        "quiz_id"
      ],
      "properties": {
        "id": {
          "description": "The ID of the quiz question.",
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "quiz_id": {
          "description": "The ID of the Quiz the question belongs to.",
          "example": 2,
          "type": "integer",
          "format": "int64"
        },
        "position": {
          "description": "The order in which the question will be retrieved and displayed.",
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "question_name": {
          "description": "The name of the question.",
          "example": "Prime Number Identification",
          "type": "string"
        },
        "question_type": {
          "description": "The type of the question.",
          "example": "multiple_choice_question",
          "type": "string"
        },
        "question_text": {
          "description": "The text of the question.",
          "example": "Which of the following is NOT a prime number?",
          "type": "string"
        },
        "points_possible": {
          "description": "The maximum amount of points possible received for getting this question correct.",
          "example": 5,
          "type": "integer",
          "format": "int64"
        },
        "correct_comments": {
          "description": "The comments to display if the student answers the question correctly.",
          "example": "That's correct!",
          "type": "string"
        },
        "incorrect_comments": {
          "description": "The comments to display if the student answers incorrectly.",
          "example": "Unfortunately, that IS a prime number.",
          "type": "string"
        },
        "neutral_comments": {
          "description": "The comments to display regardless of how the student answered.",
          "example": "Goldbach's conjecture proposes that every even integer greater than 2 can be expressed as the sum of two prime numbers.",
          "type": "string"
        },
        "answers": {
          "description": "An array of available answers to display to the student.",
          "type": "array",
          "items": {
            "$ref": "Answer"
          }
        }
      }
    },
    "Answer": {
      "id": "Answer",
      "description": "",
      "required": [
        "answer_text",
        "answer_weight"
      ],
      "properties": {
        "id": {
          "description": "The unique identifier for the answer.  Do not supply if this answer is part of a new question",
          "example": 6656,
          "type": "integer",
          "format": "int64"
        },
        "answer_text": {
          "description": "The text of the answer.",
          "example": "Constantinople",
          "type": "string"
        },
        "answer_weight": {
          "description": "An integer to determine correctness of the answer. Incorrect answers should be 0, correct answers should be non-negative.",
          "example": 100,
          "type": "integer",
          "format": "int64"
        },
        "answer_comments": {
          "description": "Specific contextual comments for a particular answer.",
          "example": "Remember to check your spelling prior to submitting this answer.",
          "type": "string"
        },
        "text_after_answers": {
          "description": "Used in missing word questions.  The text to follow the missing word",
          "example": " is the capital of Utah.",
          "type": "string"
        },
        "answer_match_left": {
          "description": "Used in matching questions.  The static value of the answer that will be displayed on the left for students to match for.",
          "example": "Salt Lake City",
          "type": "string"
        },
        "answer_match_right": {
          "description": "Used in matching questions. The correct match for the value given in answer_match_left.  Will be displayed in a dropdown with the other answer_match_right values..",
          "example": "Utah",
          "type": "string"
        },
        "matching_answer_incorrect_matches": {
          "description": "Used in matching questions. A list of distractors, delimited by new lines (\n) that will be seeded with all the answer_match_right values.",
          "example": "Nevada\nCalifornia\nWashington",
          "type": "string"
        },
        "numerical_answer_type": {
          "description": "Used in numerical questions.  Values can be 'exact_answer' or 'range_answer'.",
          "example": "exact_answer",
          "type": "string"
        },
        "exact": {
          "description": "Used in numerical questions of type 'exact_answer'.  The value the answer should equal.",
          "example": 42,
          "type": "integer",
          "format": "int64"
        },
        "margin": {
          "description": "Used in numerical questions of type 'exact_answer'. The margin of error allowed for the student's answer.",
          "example": 4,
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "description": "Used in numerical questions of type 'range_answer'. The start of the allowed range (inclusive).",
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "end": {
          "description": "Used in numerical questions of type 'range_answer'. The end of the allowed range (inclusive).",
          "example": 10,
          "type": "integer",
          "format": "int64"
        },
        "blank_id": {
          "description": "Used in fill in multiple blank and multiple dropdowns questions.",
          "example": 1170,
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
