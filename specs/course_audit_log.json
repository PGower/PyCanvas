{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "https://canvas.instructure.com/api",
  "resourcePath": "/course_audit_log",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/v1/audit/course/courses/{course_id}",
      "description": "List course change events for a given course.",
      "operations": [
        {
          "method": "GET",
          "summary": "Query by course.",
          "notes": "List course change events for a given course.",
          "nickname": "query_by_course",
          "parameters": [
            {
              "paramType": "path",
              "name": "course_id",
              "description": "ID",
              "type": "string",
              "format": null,
              "required": true
            },
            {
              "paramType": "query",
              "name": "start_time",
              "description": "The beginning of the time range from which you want events.",
              "type": "datetime",
              "format": null,
              "required": false
            },
            {
              "paramType": "query",
              "name": "end_time",
              "description": "The end of the time range from which you want events.",
              "type": "datetime",
              "format": null,
              "required": false
            }
          ],
          "type": "array",
          "items": {
            "$ref": "CourseEvent"
          }
        }
      ]
    }
  ],
  "models": {
    "CourseEventLink": {
      "id": "CourseEventLink",
      "description": "",
      "required": [

      ],
      "properties": {
        "course": {
          "description": "ID of the course for the event.",
          "example": 12345,
          "type": "integer"
        },
        "user": {
          "description": "ID of the user for the event (who made the change).",
          "example": 12345,
          "type": "integer"
        },
        "page_view": {
          "description": "ID of the page view during the event if it exists.",
          "example": "e2b76430-27a5-0131-3ca1-48e0eb13f29b",
          "type": "string"
        },
        "copied_from": {
          "description": "ID of the course that this course was copied from. This is only included if the event_type is copied_from.",
          "example": 12345,
          "type": "integer"
        },
        "copied_to": {
          "description": "ID of the course that this course was copied to. This is only included if the event_type is copied_to.",
          "example": 12345,
          "type": "integer"
        },
        "sis_batch": {
          "description": "ID of the SIS batch that triggered the event.",
          "example": 12345,
          "type": "integer"
        }
      }
    },
    "CourseEvent": {
      "id": "CourseEvent",
      "description": "",
      "required": [

      ],
      "properties": {
        "id": {
          "description": "ID of the event.",
          "example": "e2b76430-27a5-0131-3ca1-48e0eb13f29b",
          "type": "string"
        },
        "created_at": {
          "description": "timestamp of the event",
          "example": "2012-07-19T15:00:00-06:00",
          "type": "datetime"
        },
        "event_type": {
          "description": "Course event type The event type defines the type and schema of the event_data object.",
          "example": "updated",
          "type": "string"
        },
        "event_data": {
          "description": "Course event data depending on the event type.  This will return an object containing the relevant event data.  An updated event type will return an UpdatedEventData object.",
          "example": "{}",
          "type": "string"
        },
        "event_source": {
          "description": "Course event source depending on the event type.  This will return a string containing the source of the event.",
          "example": "manual|sis|api",
          "type": "string"
        },
        "links": {
          "description": "Jsonapi.org links",
          "example": "{\"course\"=>\"12345\", \"user\"=>\"12345\", \"page_view\"=>\"e2b76430-27a5-0131-3ca1-48e0eb13f29b\"}",
          "$ref": "CourseEventLink"
        }
      }
    },
    "CreatedEventData": {
      "id": "CreatedEventData",
      "description": "The created event data object returns all the fields that were set in the format of the following example.  If a field does not exist it was not set. The value of each field changed is in the format of [:old_value, :new_value].  The created event type also includes a created_source field to specify what triggered the creation of the course.",
      "required": [

      ],
      "properties": {
        "name": {
          "example": "[nil, \"Course 1\"]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start_at": {
          "example": "[nil, \"2012-01-19T15:00:00-06:00\"]",
          "type": "array",
          "items": {
            "type": "datetime"
          }
        },
        "conclude_at": {
          "example": "[nil, \"2012-01-19T15:00:00-08:00\"]",
          "type": "array",
          "items": {
            "type": "datetime"
          }
        },
        "is_public": {
          "example": "[nil, false]",
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "created_source": "manual|sis|api"
      }
    },
    "UpdatedEventData": {
      "id": "UpdatedEventData",
      "description": "The updated event data object returns all the fields that have changed in the format of the following example.  If a field does not exist it was not changed.  The value is an array that contains the before and after values for the change as in [:old_value, :new_value].",
      "required": [

      ],
      "properties": {
        "name": {
          "example": "[\"Course 1\", \"Course 2\"]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start_at": {
          "example": "[\"2012-01-19T15:00:00-06:00\", \"2012-07-19T15:00:00-06:00\"]",
          "type": "array",
          "items": {
            "type": "datetime"
          }
        },
        "conclude_at": {
          "example": "[\"2012-01-19T15:00:00-08:00\", \"2012-07-19T15:00:00-08:00\"]",
          "type": "array",
          "items": {
            "type": "datetime"
          }
        },
        "is_public": {
          "example": "[true, false]",
          "type": "array",
          "items": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
